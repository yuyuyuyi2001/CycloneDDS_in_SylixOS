/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: DynamicTypeTypes.h
  Source: /home/wangkunlin/Desktop/cyclonedds/debug/bin/idl_analyze/DynamicTypeTypes.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef DDSC_DYNAMICTYPETYPES_H_5E90A8146A823E97B533248CA32515E3
#define DDSC_DYNAMICTYPETYPES_H_5E90A8146A823E97B533248CA32515E3

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct dsub1
{
  int32_t m_int32;
} dsub1;

extern const dds_topic_descriptor_t dsub1_desc;

#define dsub1__alloc() \
((dsub1*) dds_alloc (sizeof (dsub1)));

#define dsub1_free(d,o) \
dds_sample_free ((d), &dsub1_desc, (o))

typedef struct dsubsub1
{
  bool m_bool;
} dsubsub1;

extern const dds_topic_descriptor_t dsubsub1_desc;

#define dsubsub1__alloc() \
((dsubsub1*) dds_alloc (sizeof (dsubsub1)));

#define dsubsub1_free(d,o) \
dds_sample_free ((d), &dsubsub1_desc, (o))

typedef struct dsubsub2
{
  bool m_bool;
} dsubsub2;

extern const dds_topic_descriptor_t dsubsub2_desc;

#define dsubsub2__alloc() \
((dsubsub2*) dds_alloc (sizeof (dsubsub2)));

#define dsubsub2_free(d,o) \
dds_sample_free ((d), &dsubsub2_desc, (o))

typedef struct dsub2
{
  struct dsubsub1 m_subsub1;
  struct dsubsub2 m_subsub2;
} dsub2;

extern const dds_topic_descriptor_t dsub2_desc;

#define dsub2__alloc() \
((dsub2*) dds_alloc (sizeof (dsub2)));

#define dsub2_free(d,o) \
dds_sample_free ((d), &dsub2_desc, (o))

typedef struct dsubsub1 dalias;

#define dalias__alloc() \
((dalias*) dds_alloc (sizeof (dalias)));

typedef struct dunion
{
  int32_t _d;
  union
  {
    double um_f;
    struct dsub1 um_sub1;
  } _u;
} dunion;

extern const dds_topic_descriptor_t dunion_desc;

#define dunion__alloc() \
((dunion*) dds_alloc (sizeof (dunion)));

#define dunion_free(d,o) \
dds_sample_free ((d), &dunion_desc, (o))

typedef enum denum
{
  DE1,
  DE2
} denum;

#define denum__alloc() \
((denum*) dds_alloc (sizeof (denum)));

#ifndef DDS_SEQUENCE_DSUB2_DEFINED
#define DDS_SEQUENCE_DSUB2_DEFINED
typedef struct dds_sequence_dsub2
{
  uint32_t _maximum;
  uint32_t _length;
  struct dsub2 *_buffer;
  bool _release;
} dds_sequence_dsub2;

#define dds_sequence_dsub2__alloc() \
((dds_sequence_dsub2*) dds_alloc (sizeof (dds_sequence_dsub2)));

#define dds_sequence_dsub2_allocbuf(l) \
((struct dsub2 *) dds_alloc ((l) * sizeof (struct dsub2)))
#endif /* DDS_SEQUENCE_DSUB2_DEFINED */

typedef struct dstruct
{
  bool m_bool;
  dds_sequence_dsub2 m_seq;
  struct dsub2 m_arr[10];
  struct dsub1 m_sub1;
  struct dsub2 m_sub2;
  struct dsubsub2 m_subsub2;
  dalias m_alias;
  struct dunion m_union;
  denum m_enum;
} dstruct;

extern const dds_topic_descriptor_t dstruct_desc;

#define dstruct__alloc() \
((dstruct*) dds_alloc (sizeof (dstruct)));

#define dstruct_free(d,o) \
dds_sample_free ((d), &dstruct_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC_DYNAMICTYPETYPES_H_5E90A8146A823E97B533248CA32515E3 */

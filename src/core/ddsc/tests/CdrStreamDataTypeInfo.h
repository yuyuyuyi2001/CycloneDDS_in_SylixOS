/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: CdrStreamDataTypeInfo.h
  Source: /home/wangkunlin/Desktop/cyclonedds/debug/bin/idl_analyze/CdrStreamDataTypeInfo.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef DDSC_CDRSTREAMDATATYPEINFO_H_7432CD6647756F59A4542E20A6FB1858
#define DDSC_CDRSTREAMDATATYPEINFO_H_7432CD6647756F59A4542E20A6FB1858

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct CdrStreamDataTypeInfo_dti_struct
{
  int32_t f1;
} CdrStreamDataTypeInfo_dti_struct;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_struct_desc;

#define CdrStreamDataTypeInfo_dti_struct__alloc() \
((CdrStreamDataTypeInfo_dti_struct*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_struct)));

#define CdrStreamDataTypeInfo_dti_struct_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_struct_desc, (o))

typedef struct CdrStreamDataTypeInfo_dti_string
{
  char * f1;
} CdrStreamDataTypeInfo_dti_string;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_string_desc;

#define CdrStreamDataTypeInfo_dti_string__alloc() \
((CdrStreamDataTypeInfo_dti_string*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_string)));

#define CdrStreamDataTypeInfo_dti_string_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_string_desc, (o))

typedef struct CdrStreamDataTypeInfo_dti_bstring
{
  char f1[6];
} CdrStreamDataTypeInfo_dti_bstring;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_bstring_desc;

#define CdrStreamDataTypeInfo_dti_bstring__alloc() \
((CdrStreamDataTypeInfo_dti_bstring*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_bstring)));

#define CdrStreamDataTypeInfo_dti_bstring_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_bstring_desc, (o))

#ifndef DDS_SEQUENCE_LONG_DEFINED
#define DDS_SEQUENCE_LONG_DEFINED
typedef struct dds_sequence_long
{
  uint32_t _maximum;
  uint32_t _length;
  int32_t *_buffer;
  bool _release;
} dds_sequence_long;

#define dds_sequence_long__alloc() \
((dds_sequence_long*) dds_alloc (sizeof (dds_sequence_long)));

#define dds_sequence_long_allocbuf(l) \
((int32_t *) dds_alloc ((l) * sizeof (int32_t)))
#endif /* DDS_SEQUENCE_LONG_DEFINED */

typedef struct CdrStreamDataTypeInfo_dti_seq
{
  dds_sequence_long f1;
} CdrStreamDataTypeInfo_dti_seq;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_seq_desc;

#define CdrStreamDataTypeInfo_dti_seq__alloc() \
((CdrStreamDataTypeInfo_dti_seq*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_seq)));

#define CdrStreamDataTypeInfo_dti_seq_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_seq_desc, (o))

#ifndef DDS_SEQUENCE_LONG_DEFINED
#define DDS_SEQUENCE_LONG_DEFINED
typedef struct dds_sequence_long
{
  uint32_t _maximum;
  uint32_t _length;
  int32_t *_buffer;
  bool _release;
} dds_sequence_long;

#define dds_sequence_long__alloc() \
((dds_sequence_long*) dds_alloc (sizeof (dds_sequence_long)));

#define dds_sequence_long_allocbuf(l) \
((int32_t *) dds_alloc ((l) * sizeof (int32_t)))
#endif /* DDS_SEQUENCE_LONG_DEFINED */

typedef struct CdrStreamDataTypeInfo_dti_bseq
{
  dds_sequence_long f1;
} CdrStreamDataTypeInfo_dti_bseq;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_bseq_desc;

#define CdrStreamDataTypeInfo_dti_bseq__alloc() \
((CdrStreamDataTypeInfo_dti_bseq*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_bseq)));

#define CdrStreamDataTypeInfo_dti_bseq_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_bseq_desc, (o))

#ifndef DDS_SEQUENCE_STRING_DEFINED
#define DDS_SEQUENCE_STRING_DEFINED
typedef struct dds_sequence_string
{
  uint32_t _maximum;
  uint32_t _length;
  char **_buffer;
  bool _release;
} dds_sequence_string;

#define dds_sequence_string__alloc() \
((dds_sequence_string*) dds_alloc (sizeof (dds_sequence_string)));

#define dds_sequence_string_allocbuf(l) \
((char **) dds_alloc ((l) * sizeof (char*)))
#endif /* DDS_SEQUENCE_STRING_DEFINED */

typedef struct CdrStreamDataTypeInfo_dti_seq_str
{
  dds_sequence_string f1;
} CdrStreamDataTypeInfo_dti_seq_str;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_seq_str_desc;

#define CdrStreamDataTypeInfo_dti_seq_str__alloc() \
((CdrStreamDataTypeInfo_dti_seq_str*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_seq_str)));

#define CdrStreamDataTypeInfo_dti_seq_str_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_seq_str_desc, (o))

typedef struct CdrStreamDataTypeInfo_dti_arr
{
  int32_t f1[3];
} CdrStreamDataTypeInfo_dti_arr;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_arr_desc;

#define CdrStreamDataTypeInfo_dti_arr__alloc() \
((CdrStreamDataTypeInfo_dti_arr*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_arr)));

#define CdrStreamDataTypeInfo_dti_arr_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_arr_desc, (o))

typedef struct CdrStreamDataTypeInfo_dti_arr_bstr
{
  char f1[3][6];
} CdrStreamDataTypeInfo_dti_arr_bstr;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_arr_bstr_desc;

#define CdrStreamDataTypeInfo_dti_arr_bstr__alloc() \
((CdrStreamDataTypeInfo_dti_arr_bstr*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_arr_bstr)));

#define CdrStreamDataTypeInfo_dti_arr_bstr_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_arr_bstr_desc, (o))

typedef struct CdrStreamDataTypeInfo_dti_opt
{
  int32_t * f1;
} CdrStreamDataTypeInfo_dti_opt;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_opt_desc;

#define CdrStreamDataTypeInfo_dti_opt__alloc() \
((CdrStreamDataTypeInfo_dti_opt*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_opt)));

#define CdrStreamDataTypeInfo_dti_opt_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_opt_desc, (o))

typedef struct CdrStreamDataTypeInfo_dti_ext
{
  int32_t * f1;
} CdrStreamDataTypeInfo_dti_ext;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_ext_desc;

#define CdrStreamDataTypeInfo_dti_ext__alloc() \
((CdrStreamDataTypeInfo_dti_ext*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_ext)));

#define CdrStreamDataTypeInfo_dti_ext_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_ext_desc, (o))

typedef struct CdrStreamDataTypeInfo_dti_struct_key
{
  int32_t f1;
} CdrStreamDataTypeInfo_dti_struct_key;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_struct_key_desc;

#define CdrStreamDataTypeInfo_dti_struct_key__alloc() \
((CdrStreamDataTypeInfo_dti_struct_key*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_struct_key)));

#define CdrStreamDataTypeInfo_dti_struct_key_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_struct_key_desc, (o))

typedef struct CdrStreamDataTypeInfo_dti_struct_nested_key
{
  struct CdrStreamDataTypeInfo_dti_struct f1;
} CdrStreamDataTypeInfo_dti_struct_nested_key;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_struct_nested_key_desc;

#define CdrStreamDataTypeInfo_dti_struct_nested_key__alloc() \
((CdrStreamDataTypeInfo_dti_struct_nested_key*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_struct_nested_key)));

#define CdrStreamDataTypeInfo_dti_struct_nested_key_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_struct_nested_key_desc, (o))

typedef struct CdrStreamDataTypeInfo_dti_struct_nested_nokey
{
  struct CdrStreamDataTypeInfo_dti_struct_key f1;
} CdrStreamDataTypeInfo_dti_struct_nested_nokey;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_struct_nested_nokey_desc;

#define CdrStreamDataTypeInfo_dti_struct_nested_nokey__alloc() \
((CdrStreamDataTypeInfo_dti_struct_nested_nokey*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_struct_nested_nokey)));

#define CdrStreamDataTypeInfo_dti_struct_nested_nokey_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_struct_nested_nokey_desc, (o))

typedef enum CdrStreamDataTypeInfo_e
{
  CdrStreamDataTypeInfo_E1,
  CdrStreamDataTypeInfo_E2
} CdrStreamDataTypeInfo_e;

#define CdrStreamDataTypeInfo_e__alloc() \
((CdrStreamDataTypeInfo_e*) dds_alloc (sizeof (CdrStreamDataTypeInfo_e)));

typedef struct CdrStreamDataTypeInfo_dti_union
{
  int32_t _d;
  union
  {
    int32_t f1;
  } _u;
} CdrStreamDataTypeInfo_dti_union;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_union_desc;

#define CdrStreamDataTypeInfo_dti_union__alloc() \
((CdrStreamDataTypeInfo_dti_union*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_union)));

#define CdrStreamDataTypeInfo_dti_union_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_union_desc, (o))

typedef struct CdrStreamDataTypeInfo_dti_union_string
{
  int32_t _d;
  union
  {
    char * f1;
  } _u;
} CdrStreamDataTypeInfo_dti_union_string;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_union_string_desc;

#define CdrStreamDataTypeInfo_dti_union_string__alloc() \
((CdrStreamDataTypeInfo_dti_union_string*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_union_string)));

#define CdrStreamDataTypeInfo_dti_union_string_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_union_string_desc, (o))

typedef struct CdrStreamDataTypeInfo_dti_union_enum
{
  CdrStreamDataTypeInfo_e _d;
  union
  {
    int32_t f1;
  } _u;
} CdrStreamDataTypeInfo_dti_union_enum;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_union_enum_desc;

#define CdrStreamDataTypeInfo_dti_union_enum__alloc() \
((CdrStreamDataTypeInfo_dti_union_enum*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_union_enum)));

#define CdrStreamDataTypeInfo_dti_union_enum_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_union_enum_desc, (o))

#ifndef DDS_SEQUENCE_LONG_DEFINED
#define DDS_SEQUENCE_LONG_DEFINED
typedef struct dds_sequence_long
{
  uint32_t _maximum;
  uint32_t _length;
  int32_t *_buffer;
  bool _release;
} dds_sequence_long;

#define dds_sequence_long__alloc() \
((dds_sequence_long*) dds_alloc (sizeof (dds_sequence_long)));

#define dds_sequence_long_allocbuf(l) \
((int32_t *) dds_alloc ((l) * sizeof (int32_t)))
#endif /* DDS_SEQUENCE_LONG_DEFINED */

typedef struct CdrStreamDataTypeInfo_dti_union_seq
{
  int32_t _d;
  union
  {
    dds_sequence_long f1;
  } _u;
} CdrStreamDataTypeInfo_dti_union_seq;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_union_seq_desc;

#define CdrStreamDataTypeInfo_dti_union_seq__alloc() \
((CdrStreamDataTypeInfo_dti_union_seq*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_union_seq)));

#define CdrStreamDataTypeInfo_dti_union_seq_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_union_seq_desc, (o))

typedef struct CdrStreamDataTypeInfo_dti_union_arr
{
  int32_t _d;
  union
  {
    int32_t f1[3];
  } _u;
} CdrStreamDataTypeInfo_dti_union_arr;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_union_arr_desc;

#define CdrStreamDataTypeInfo_dti_union_arr__alloc() \
((CdrStreamDataTypeInfo_dti_union_arr*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_union_arr)));

#define CdrStreamDataTypeInfo_dti_union_arr_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_union_arr_desc, (o))

typedef struct CdrStreamDataTypeInfo_dti_union_struct
{
  int32_t _d;
  union
  {
    struct CdrStreamDataTypeInfo_dti_struct f1;
  } _u;
} CdrStreamDataTypeInfo_dti_union_struct;

extern const dds_topic_descriptor_t CdrStreamDataTypeInfo_dti_union_struct_desc;

#define CdrStreamDataTypeInfo_dti_union_struct__alloc() \
((CdrStreamDataTypeInfo_dti_union_struct*) dds_alloc (sizeof (CdrStreamDataTypeInfo_dti_union_struct)));

#define CdrStreamDataTypeInfo_dti_union_struct_free(d,o) \
dds_sample_free ((d), &CdrStreamDataTypeInfo_dti_union_struct_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC_CDRSTREAMDATATYPEINFO_H_7432CD6647756F59A4542E20A6FB1858 */

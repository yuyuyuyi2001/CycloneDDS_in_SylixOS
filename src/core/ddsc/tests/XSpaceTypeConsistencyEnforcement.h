/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: XSpaceTypeConsistencyEnforcement.h
  Source: /home/wangkunlin/Desktop/cyclonedds/debug/bin/idl_analyze/XSpaceTypeConsistencyEnforcement.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef DDSC_XSPACETYPECONSISTENCYENFORCEMENT_H_CC5830E68B2C8EB540616ABCDDF79E27
#define DDSC_XSPACETYPECONSISTENCYENFORCEMENT_H_CC5830E68B2C8EB540616ABCDDF79E27

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifndef DDS_SEQUENCE_LONG_DEFINED
#define DDS_SEQUENCE_LONG_DEFINED
typedef struct dds_sequence_long
{
  uint32_t _maximum;
  uint32_t _length;
  int32_t *_buffer;
  bool _release;
} dds_sequence_long;

#define dds_sequence_long__alloc() \
((dds_sequence_long*) dds_alloc (sizeof (dds_sequence_long)));

#define dds_sequence_long_allocbuf(l) \
((int32_t *) dds_alloc ((l) * sizeof (int32_t)))
#endif /* DDS_SEQUENCE_LONG_DEFINED */

typedef struct XSpaceTypeConsistencyEnforcement_t1_1
{
  dds_sequence_long f1;
} XSpaceTypeConsistencyEnforcement_t1_1;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t1_1_desc;

#define XSpaceTypeConsistencyEnforcement_t1_1__alloc() \
((XSpaceTypeConsistencyEnforcement_t1_1*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t1_1)));

#define XSpaceTypeConsistencyEnforcement_t1_1_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t1_1_desc, (o))

#ifndef DDS_SEQUENCE_LONG_DEFINED
#define DDS_SEQUENCE_LONG_DEFINED
typedef struct dds_sequence_long
{
  uint32_t _maximum;
  uint32_t _length;
  int32_t *_buffer;
  bool _release;
} dds_sequence_long;

#define dds_sequence_long__alloc() \
((dds_sequence_long*) dds_alloc (sizeof (dds_sequence_long)));

#define dds_sequence_long_allocbuf(l) \
((int32_t *) dds_alloc ((l) * sizeof (int32_t)))
#endif /* DDS_SEQUENCE_LONG_DEFINED */

typedef struct XSpaceTypeConsistencyEnforcement_t1_2
{
  dds_sequence_long f1;
} XSpaceTypeConsistencyEnforcement_t1_2;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t1_2_desc;

#define XSpaceTypeConsistencyEnforcement_t1_2__alloc() \
((XSpaceTypeConsistencyEnforcement_t1_2*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t1_2)));

#define XSpaceTypeConsistencyEnforcement_t1_2_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t1_2_desc, (o))

#ifndef DDS_SEQUENCE_LONG_DEFINED
#define DDS_SEQUENCE_LONG_DEFINED
typedef struct dds_sequence_long
{
  uint32_t _maximum;
  uint32_t _length;
  int32_t *_buffer;
  bool _release;
} dds_sequence_long;

#define dds_sequence_long__alloc() \
((dds_sequence_long*) dds_alloc (sizeof (dds_sequence_long)));

#define dds_sequence_long_allocbuf(l) \
((int32_t *) dds_alloc ((l) * sizeof (int32_t)))
#endif /* DDS_SEQUENCE_LONG_DEFINED */

typedef struct XSpaceTypeConsistencyEnforcement_t1_3
{
  dds_sequence_long f1;
} XSpaceTypeConsistencyEnforcement_t1_3;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t1_3_desc;

#define XSpaceTypeConsistencyEnforcement_t1_3__alloc() \
((XSpaceTypeConsistencyEnforcement_t1_3*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t1_3)));

#define XSpaceTypeConsistencyEnforcement_t1_3_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t1_3_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t2_1
{
  char f1[6];
} XSpaceTypeConsistencyEnforcement_t2_1;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t2_1_desc;

#define XSpaceTypeConsistencyEnforcement_t2_1__alloc() \
((XSpaceTypeConsistencyEnforcement_t2_1*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t2_1)));

#define XSpaceTypeConsistencyEnforcement_t2_1_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t2_1_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t2_2
{
  char f1[11];
} XSpaceTypeConsistencyEnforcement_t2_2;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t2_2_desc;

#define XSpaceTypeConsistencyEnforcement_t2_2__alloc() \
((XSpaceTypeConsistencyEnforcement_t2_2*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t2_2)));

#define XSpaceTypeConsistencyEnforcement_t2_2_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t2_2_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t2_3
{
  char * f1;
} XSpaceTypeConsistencyEnforcement_t2_3;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t2_3_desc;

#define XSpaceTypeConsistencyEnforcement_t2_3__alloc() \
((XSpaceTypeConsistencyEnforcement_t2_3*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t2_3)));

#define XSpaceTypeConsistencyEnforcement_t2_3_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t2_3_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t3_1
{
  int32_t f1;
} XSpaceTypeConsistencyEnforcement_t3_1;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t3_1_desc;

#define XSpaceTypeConsistencyEnforcement_t3_1__alloc() \
((XSpaceTypeConsistencyEnforcement_t3_1*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t3_1)));

#define XSpaceTypeConsistencyEnforcement_t3_1_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t3_1_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t3_2
{
  int32_t f1a;
} XSpaceTypeConsistencyEnforcement_t3_2;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t3_2_desc;

#define XSpaceTypeConsistencyEnforcement_t3_2__alloc() \
((XSpaceTypeConsistencyEnforcement_t3_2*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t3_2)));

#define XSpaceTypeConsistencyEnforcement_t3_2_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t3_2_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t4_1
{
  int32_t _d;
  union
  {
    int32_t f1;
  } _u;
} XSpaceTypeConsistencyEnforcement_t4_1;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t4_1_desc;

#define XSpaceTypeConsistencyEnforcement_t4_1__alloc() \
((XSpaceTypeConsistencyEnforcement_t4_1*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t4_1)));

#define XSpaceTypeConsistencyEnforcement_t4_1_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t4_1_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t4_2
{
  int32_t _d;
  union
  {
    int32_t f1a;
  } _u;
} XSpaceTypeConsistencyEnforcement_t4_2;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t4_2_desc;

#define XSpaceTypeConsistencyEnforcement_t4_2__alloc() \
((XSpaceTypeConsistencyEnforcement_t4_2*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t4_2)));

#define XSpaceTypeConsistencyEnforcement_t4_2_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t4_2_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t5_1
{
  int32_t f1;
} XSpaceTypeConsistencyEnforcement_t5_1;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t5_1_desc;

#define XSpaceTypeConsistencyEnforcement_t5_1__alloc() \
((XSpaceTypeConsistencyEnforcement_t5_1*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t5_1)));

#define XSpaceTypeConsistencyEnforcement_t5_1_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t5_1_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t5_2
{
  struct XSpaceTypeConsistencyEnforcement_t5_1 parent;
  int32_t f2;
} XSpaceTypeConsistencyEnforcement_t5_2;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t5_2_desc;

#define XSpaceTypeConsistencyEnforcement_t5_2__alloc() \
((XSpaceTypeConsistencyEnforcement_t5_2*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t5_2)));

#define XSpaceTypeConsistencyEnforcement_t5_2_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t5_2_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t5_3
{
  int32_t f1;
  int32_t f2;
} XSpaceTypeConsistencyEnforcement_t5_3;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t5_3_desc;

#define XSpaceTypeConsistencyEnforcement_t5_3__alloc() \
((XSpaceTypeConsistencyEnforcement_t5_3*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t5_3)));

#define XSpaceTypeConsistencyEnforcement_t5_3_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t5_3_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t5_4
{
  int32_t f1;
  int32_t * f2;
} XSpaceTypeConsistencyEnforcement_t5_4;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t5_4_desc;

#define XSpaceTypeConsistencyEnforcement_t5_4__alloc() \
((XSpaceTypeConsistencyEnforcement_t5_4*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t5_4)));

#define XSpaceTypeConsistencyEnforcement_t5_4_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t5_4_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t6_1
{
  int32_t f1;
} XSpaceTypeConsistencyEnforcement_t6_1;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t6_1_desc;

#define XSpaceTypeConsistencyEnforcement_t6_1__alloc() \
((XSpaceTypeConsistencyEnforcement_t6_1*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t6_1)));

#define XSpaceTypeConsistencyEnforcement_t6_1_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t6_1_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t6_2
{
  int32_t f1;
  int32_t f2;
} XSpaceTypeConsistencyEnforcement_t6_2;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t6_2_desc;

#define XSpaceTypeConsistencyEnforcement_t6_2__alloc() \
((XSpaceTypeConsistencyEnforcement_t6_2*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t6_2)));

#define XSpaceTypeConsistencyEnforcement_t6_2_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t6_2_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t7_1
{
  int32_t _d;
  union
  {
    int32_t f1;
  } _u;
} XSpaceTypeConsistencyEnforcement_t7_1;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t7_1_desc;

#define XSpaceTypeConsistencyEnforcement_t7_1__alloc() \
((XSpaceTypeConsistencyEnforcement_t7_1*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t7_1)));

#define XSpaceTypeConsistencyEnforcement_t7_1_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t7_1_desc, (o))

typedef struct XSpaceTypeConsistencyEnforcement_t7_2
{
  int32_t _d;
  union
  {
    int32_t f1;
    int16_t f2;
  } _u;
} XSpaceTypeConsistencyEnforcement_t7_2;

extern const dds_topic_descriptor_t XSpaceTypeConsistencyEnforcement_t7_2_desc;

#define XSpaceTypeConsistencyEnforcement_t7_2__alloc() \
((XSpaceTypeConsistencyEnforcement_t7_2*) dds_alloc (sizeof (XSpaceTypeConsistencyEnforcement_t7_2)));

#define XSpaceTypeConsistencyEnforcement_t7_2_free(d,o) \
dds_sample_free ((d), &XSpaceTypeConsistencyEnforcement_t7_2_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC_XSPACETYPECONSISTENCYENFORCEMENT_H_CC5830E68B2C8EB540616ABCDDF79E27 */

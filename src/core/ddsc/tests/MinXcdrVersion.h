/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: MinXcdrVersion.h
  Source: /home/wangkunlin/Desktop/cyclonedds/debug/bin/idl_analyze/MinXcdrVersion.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef DDSC_MINXCDRVERSION_H_4FE78D92F5C570FF8AC2B01A57B8CA39
#define DDSC_MINXCDRVERSION_H_4FE78D92F5C570FF8AC2B01A57B8CA39

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct MinXcdrVersion_t
{
  int32_t f1;
} MinXcdrVersion_t;

extern const dds_topic_descriptor_t MinXcdrVersion_t_desc;

#define MinXcdrVersion_t__alloc() \
((MinXcdrVersion_t*) dds_alloc (sizeof (MinXcdrVersion_t)));

#define MinXcdrVersion_t_free(d,o) \
dds_sample_free ((d), &MinXcdrVersion_t_desc, (o))

typedef struct MinXcdrVersion_t_nested
{
  struct MinXcdrVersion_t f1;
} MinXcdrVersion_t_nested;

extern const dds_topic_descriptor_t MinXcdrVersion_t_nested_desc;

#define MinXcdrVersion_t_nested__alloc() \
((MinXcdrVersion_t_nested*) dds_alloc (sizeof (MinXcdrVersion_t_nested)));

#define MinXcdrVersion_t_nested_free(d,o) \
dds_sample_free ((d), &MinXcdrVersion_t_nested_desc, (o))

typedef struct MinXcdrVersion_t_inherit
{
  struct MinXcdrVersion_t parent;
  int32_t f2;
} MinXcdrVersion_t_inherit;

extern const dds_topic_descriptor_t MinXcdrVersion_t_inherit_desc;

#define MinXcdrVersion_t_inherit__alloc() \
((MinXcdrVersion_t_inherit*) dds_alloc (sizeof (MinXcdrVersion_t_inherit)));

#define MinXcdrVersion_t_inherit_free(d,o) \
dds_sample_free ((d), &MinXcdrVersion_t_inherit_desc, (o))

typedef struct MinXcdrVersion_t_opt
{
  int32_t * f1;
} MinXcdrVersion_t_opt;

extern const dds_topic_descriptor_t MinXcdrVersion_t_opt_desc;

#define MinXcdrVersion_t_opt__alloc() \
((MinXcdrVersion_t_opt*) dds_alloc (sizeof (MinXcdrVersion_t_opt)));

#define MinXcdrVersion_t_opt_free(d,o) \
dds_sample_free ((d), &MinXcdrVersion_t_opt_desc, (o))

typedef struct MinXcdrVersion_t_ext
{
  int32_t * f1;
} MinXcdrVersion_t_ext;

extern const dds_topic_descriptor_t MinXcdrVersion_t_ext_desc;

#define MinXcdrVersion_t_ext__alloc() \
((MinXcdrVersion_t_ext*) dds_alloc (sizeof (MinXcdrVersion_t_ext)));

#define MinXcdrVersion_t_ext_free(d,o) \
dds_sample_free ((d), &MinXcdrVersion_t_ext_desc, (o))

typedef struct MinXcdrVersion_t_append
{
  int32_t f1;
} MinXcdrVersion_t_append;

extern const dds_topic_descriptor_t MinXcdrVersion_t_append_desc;

#define MinXcdrVersion_t_append__alloc() \
((MinXcdrVersion_t_append*) dds_alloc (sizeof (MinXcdrVersion_t_append)));

#define MinXcdrVersion_t_append_free(d,o) \
dds_sample_free ((d), &MinXcdrVersion_t_append_desc, (o))

typedef struct MinXcdrVersion_t_mut
{
  int32_t f1;
} MinXcdrVersion_t_mut;

extern const dds_topic_descriptor_t MinXcdrVersion_t_mut_desc;

#define MinXcdrVersion_t_mut__alloc() \
((MinXcdrVersion_t_mut*) dds_alloc (sizeof (MinXcdrVersion_t_mut)));

#define MinXcdrVersion_t_mut_free(d,o) \
dds_sample_free ((d), &MinXcdrVersion_t_mut_desc, (o))

typedef struct MinXcdrVersion_t_nested_mut
{
  struct MinXcdrVersion_t_mut f1;
} MinXcdrVersion_t_nested_mut;

extern const dds_topic_descriptor_t MinXcdrVersion_t_nested_mut_desc;

#define MinXcdrVersion_t_nested_mut__alloc() \
((MinXcdrVersion_t_nested_mut*) dds_alloc (sizeof (MinXcdrVersion_t_nested_mut)));

#define MinXcdrVersion_t_nested_mut_free(d,o) \
dds_sample_free ((d), &MinXcdrVersion_t_nested_mut_desc, (o))

typedef struct MinXcdrVersion_t_nested_opt
{
  struct MinXcdrVersion_t_mut f1;
} MinXcdrVersion_t_nested_opt;

extern const dds_topic_descriptor_t MinXcdrVersion_t_nested_opt_desc;

#define MinXcdrVersion_t_nested_opt__alloc() \
((MinXcdrVersion_t_nested_opt*) dds_alloc (sizeof (MinXcdrVersion_t_nested_opt)));

#define MinXcdrVersion_t_nested_opt_free(d,o) \
dds_sample_free ((d), &MinXcdrVersion_t_nested_opt_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC_MINXCDRVERSION_H_4FE78D92F5C570FF8AC2B01A57B8CA39 */
